---
- name: Set master var on all hosts
  set_fact:
    microk8s_master: "{{ inventory_hostname }}"
  delegate_to: "{{ microk8s_hosts }}"
  delegate_facts: true
  with_items: "{{ ansible_play_hosts }}"
  loop_control:
    loop_var: microk8s_hosts
  when: is_master is defined and (is_master | bool)

- name: Waiting for microk8s to be ready on microk8s host master
  ansible.builtin.command:
    cmd: microk8s status --wait-ready
  when: inventory_hostname in microk8s_master
  changed_when: false

- name: Get microk8s cluster nodes
  ansible.builtin.command:
    cmd: microk8s kubectl get nodes --no-headers -o custom-columns=:.metadata.name
  when: inventory_hostname in microk8s_master
  changed_when: false
  register: microk8s_cluster_node

- name: Get the microk8s join command from the microk8s master
  ansible.builtin.shell:
    cmd: >-
      microk8s add-node |
      grep -E -m1 'microk8s join {{ microk8s_ip_regex_ha }}'
  with_items: "{{ ansible_play_hosts  | difference(microk8s_master) }}"
  loop_control:
    loop_var: microk8s_join_cmd
  when: inventory_hostname in microk8s_master
  changed_when: false
  register: microk8s_join_command

- block:
    - name: Waiting for microk8s to be ready on microk8s host node
      ansible.builtin.command:
        cmd: microk8s status --wait-ready
      changed_when: false

    - name: Set the microk8s join command on the microk8s node
      ansible.builtin.command:
        cmd: "{{ microk8s_join_cmd.stdout }} --skip-verify"
      with_items: "{{ hostvars[microk8s_master]['microk8s_join_command'].results }}" # yamllint disable-line
      loop_control:
        loop_var: microk8s_join_cmd
      when: inventory_hostname in microk8s_join_cmd.microk8s_join_cmd and inventory_hostname not in hostvars[microk8s_master]['microk8s_cluster_node'].stdout # yamllint disable-line
      notify:
        - microk8s ready
        - refresh user config
  when: inventory_hostname not in microk8s_master
  tags:
    - microk8s
    - microk8s.ha
    - microk8s.ha.join

- block:
  - name: Set the current hosts's IP address in kubelet args
    ansible.builtin.blockinfile:
      path: /var/snap/microk8s/current/args/kubelet
      marker: "# {mark} ANSIBLE MANAGED: microk8s node ip"
      content: "--node-ip={{ microk8s_node_ip }}"
    notify: restart microk8s
  - name: Set the current hosts's IP address in kube api server args
    ansible.builtin.blockinfile:
      path: /var/snap/microk8s/current/args/kube-apiserver
      marker: "# {mark} ANSIBLE MANAGED: microk8s node ip"
      content: "--advertise-address={{ microk8s_node_ip }}"
    notify: restart microk8s
  when: microk8s_node_ip is defined and microk8s_node_ip != ""

- name: "Flush handlers"
  meta: flush_handlers
...
